// Single-band turbidity algorithm

var addNDTI = function(image) {
  
    var ndti = image.expression( 
                  '(A_t * (p_w * scale_factor) / (1 - ((p_w * scale_factor )/ C)))', {
                      'p_w': image.select('B4').divide(10000), //red band mid wv_len 
                      'A_t': " ", (add the reference value acccording to the satellite series)
                      'B_t': " ", 
                      'C': " ", 
                      'pi': Math.PI,
                      'scale_factor': 1.0 //band info
                  }).rename('NDTI');
                  return image.addBands(ndti);
};

var s2NDTI = S2_BOA_Col.map(addNDTI);
print(s2NDTI, 's2NDTI');

//Monthly Images
var months = ee.List.sequence(1,12);
var years = ee.List.sequence(2020,2020); 
// monthly composite
var monthlyImages =  ee.ImageCollection.fromImages(
  years.map(function (y) {
  return months.map(function(m){
  var w = S2_BOA_Col.filter(ee.Filter.calendarRange(y, y, 'year'))
           .filter(ee.Filter.calendarRange(m, m, 'month'))
           .mean()
           //.median()
           //.min()
           .set('system:time_start',ee.Date.fromYMD(y,m,1));
  return w.set('year', y)
           .set('month', m)
           .set('date', ee.Date.fromYMD(y,m,1))
           .set('system:time_start',ee.Date.fromYMD(y,m,1)) 

});
}).flatten());

print(monthlyImages);


////  apply ndti to the images
function ndti(img){
  
    var ndtiImg = img.expression( 
                  '(A_t * (p_w * scale_factor) / (1 - ((p_w * scale_factor )/ C)))', {
                      'p_w': img.select('B4').divide(10000), //
                      'A_t': " ", (add the reference value acccording to the satellite series), 
                      'B_t': " ", 
                      'C': " ", 
                      'pi': Math.PI,
                      'scale_factor': 1.0 //band info
                  }).rename('NDTI');
                  return img.addBands(ndtiImg);
}
var monthlyCompositesNDTI = monthlyImages.map(function(image){
  return ndti(image);
}); //maps over monthly composites and adds an NDVI calculation to the band we added.
print(monthlyCompositesNDTI, 'monthlyCompositesNDTI');

var ndtiCollection = monthlyCompositesNDTI.select('NDTI'); 

var J2020_ndti = ndtiCollection.filterDate('2020-01-01','2020-01-31')
  .first()
  .clip(aoi);

var F2020_ndti = ndtiCollection.filterDate('2020-02-01','2020-02-29')
  .first()
  .clip(aoi);

var Mar2020_ndti = ndtiCollection.filterDate('2020-03-01','2020-03-31')
  .first()
  .clip(aoi);
  
var Ap2020_ndti = ndtiCollection.filterDate('2020-04-01','2020-04-30')
  .first()
  .clip(aoi);
  
var M2020_ndti = ndtiCollection.filterDate('2020-05-01','2020-05-31')
  .first()
  .clip(aoi);
  
var JUN2020_ndti = ndtiCollection.filterDate('2020-06-01','2020-06-30')
  .first()
  .clip(aoi);
  
var JUL2020_ndti = ndtiCollection.filterDate('2020-07-01','2020-07-31')
  .first()
  .clip(aoi);
  
var A2020_ndti = ndtiCollection.filterDate('2020-08-01','2020-08-31')
  .first()
  .clip(aoi);
  
var S2020_ndti = ndtiCollection.filterDate('2020-09-01','2020-09-30')
  .first()
  .clip(aoi);
  
var O2020_ndti = ndtiCollection.filterDate('2020-10-01','2020-10-31')
  .first()
  .clip(aoi);
  
var N2020_ndti = ndtiCollection.filterDate('2020-11-01','2020-11-30')
  .first()
  .clip(aoi);
  
var D2020_ndti = ndtiCollection.filterDate('2020-12-01','2020-12-31')
  .first()
  .clip(aoi);
  
  
var ndtiParams = {min: -1, max: 1, palette: ['white', 'darkgreen']}; 

var yMean = ndtiCollection.mean(); 
print (yMean, 'yMean');

var stdImg = ndtiCollection.reduce(ee.Reducer.stdDev());

var AnomalyJan2020 = J2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyFeb2020 = F2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyMar2020 = Mar2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyApr2020 = Ap2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyMay2020 = M2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyJun2020 = JUN2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyJul2020 = JUL2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyAug2020 = A2020_ndti.subtract(yMean).divide(stdImg);
var AnomalySep2020 = S2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyOct2020 = O2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyNov2020 = N2020_ndti.subtract(yMean).divide(stdImg);
var AnomalyDec2020 = D2020_ndti.subtract(yMean).divide(stdImg);

var Std_Anomalies = ee.ImageCollection([AnomalyJan2020, AnomalyFeb2020, AnomalyMar2020, AnomalyApr2020, AnomalyMay2020, AnomalyJun2020, AnomalyJul2020, AnomalyAug2020, AnomalySep2020, AnomalyOct2020, AnomalyNov2020, AnomalyDec2020]);

var batch = require('users/fitoprincipe/geetools:batch');
batch.Download.ImageCollection.toDrive(Std_Anomalies, 'S2_Std_Anomalies', 
                {scale: 10, 
                region: aoi, 
                type: 'float'});